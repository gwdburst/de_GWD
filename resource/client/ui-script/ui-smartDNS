#!/bin/bash
RED='\E[1;31m'
GREEN='\E[1;32m'
YELLOW='\E[1;33m'
BLUE='\E[1;34m'
PURPLE='\E[1;35m'
CYAN='\E[1;36m'
WHITE='\E[1;37m'
cRES='\E[0m'



echo -e "\r\c" && echo -e "${WHITE}[${cRES}...${WHITE}]\c" && echo -e "\t${WHITE}SmartDNS action${cRES}\c"

shttps1=$(grep 'server-https ' /etc/smartdns/smartdns.conf | awk NR==1)
shttps2=$(grep 'server-https ' /etc/smartdns/smartdns.conf | awk NR==2)
doh1str0=$(echo $shttps1 | awk '{print$2}' | sed 's?https://??' | grep "/dq")
doh2str0=$(echo $shttps2 | awk '{print$2}' | sed 's?https://??' | grep "/dq")
saddress1=$(grep 'address' /etc/smartdns/smartdns.conf | awk NR==1)
saddress2=$(grep 'address' /etc/smartdns/smartdns.conf | awk NR==2)

doh1Domain0=$(echo $doh1str0 | cut -d/ -f1 | cut -d: -f1)
doh2Domain0=$(echo $doh2str0 | cut -d/ -f1 | cut -d: -f1)

doh1IP0=$(echo $saddress1 | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v "127.0.0.1" | sed '/^\s*$/d')
doh2IP0=$(echo $saddress2 | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v "127.0.0.1" | sed '/^\s*$/d')


doh1=$(jq -r '.dns.DOH[]' /opt/de_GWD/0conf 2>/dev/null | grep "/dq" | awk NR==1)
doh2=$(jq -r '.dns.DOH[]' /opt/de_GWD/0conf 2>/dev/null | grep "/dq" | awk NR==2)
DoG=$(jq -r '.dns.DoG' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')

[[ -n $doh1 ]] && doh1Domain=$(echo $doh1 | cut -d/ -f1 | cut -d: -f1)
[[ -n $doh2 ]] && doh2Domain=$(echo $doh2 | cut -d/ -f1 | cut -d: -f1)

[[ -n $doh1 ]] && doh1IP=$(dig @127.0.0.1 $doh1Domain -4p 5330 +short  | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v "127.0.0.1" | xargs -n 1 | awk NR==1)
[[ -n $doh2 ]] && doh2IP=$(dig @127.0.0.1 $doh2Domain -4p 5330 +short  | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v "127.0.0.1" | xargs -n 1 | awk NR==1)

[[ -n $DoG ]] && DoGcDomain=$(echo $DoG | cut -d: -f1)
[[ -n $DoG ]] && DoGcIP=$(dig @127.0.0.1 $DoGcDomain -4p 5330 +short  | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v "127.0.0.1" | xargs -n 1 | awk NR==1)
[[ -n $DoG ]] && DoGcPort=$(echo $DoG | cut -d: -f2 | grep '^[[:digit:]]*$')


if [[ -n $DoGcIP ]] && [[ $DoGcIP != $DoGcIP0 ]]; then
sed -i '/DoGc_START/,/DoGc_END/d' /opt/de_GWD/coredns/corefile
cat << EOF >>/opt/de_GWD/coredns/corefile
#DoGc_START
.:5335 {
  bind 127.0.0.1
  grpc . $DoGcIP:$DoGcPort {
    tls_servername $DoGcDomain
  }
}
#DoGc_END
EOF
systemctl enable coredns >/dev/null 2>&1
systemctl restart coredns
elif [[ -z $DoGcIP ]]; then
sed -i '/DoGc_START/,/DoGc_END/d' /opt/de_GWD/coredns/corefile
if [[ $(cat /opt/de_GWD/coredns/corefile | wc -c) -le 50 ]]; then
systemctl disable coredns >/dev/null 2>&1
systemctl stop coredns
else
systemctl restart coredns
fi
fi


[[ -z $(jq -r '.v2nodeDIV.nodeSM.apple' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$') ]] && appleDirectConf="conf-file /etc/smartdns/apple.china.conf"

cat << EOF >/etc/smartdns/smartdns.conf
conf-file /etc/smartdns/accelerated-domains.china.conf
conf-file /etc/smartdns/bogus-domains.china.conf
conf-file /etc/smartdns/whitelist-ip-chnlist.conf
$appleDirectConf

bind 127.0.0.1:5331 -no-rule-nameserver -group chnDNS
bind-tcp 127.0.0.1:5331 -no-rule-nameserver -group chnDNS

bind 127.0.0.1:5332 -no-rule-nameserver -no-speed-check -no-cache -no-rule-addr -group chnDNS
bind-tcp 127.0.0.1:5332 -no-rule-nameserver -no-speed-check -no-cache -no-rule-addr -group chnDNS

bind 127.0.0.1:5333 -no-rule-nameserver -group GlobalDNS
bind-tcp 127.0.0.1:5333 -no-rule-nameserver -group GlobalDNS

bind 127.0.0.1:5334 -no-rule-nameserver -no-speed-check -no-cache -group GlobalDNS
bind-tcp 127.0.0.1:5334 -no-rule-nameserver -no-speed-check -no-cache -group GlobalDNS

bind 127.0.0.1:5342 -no-speed-check
bind-tcp 127.0.0.1:5342 -no-speed-check

speed-check-mode tcp:443,ping
cache-size 10000
cache-persist yes
cache-file /etc/smartdns/smartdns.cache
rr-ttl 600
rr-ttl-min 10
rr-ttl-max 3600
force-AAAA-SOA yes
prefetch-domain yes
serve-expired yes
serve-expired-ttl 1800
serve-expired-reply-ttl 4

log-level error
log-file /var/log/smartdns.log
log-size 128K
log-num 2

EOF

if [[ -z $(jq -r '.dns.china' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$') ]]; then
  jq --arg dnsChina "114.114.114.114 114.114.115.115 119.29.29.29 119.28.28.28 182.254.118.118 223.5.5.5 223.6.6.6" '.dns.china=$dnsChina' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
  chmod 666 /opt/de_GWD/0conf
fi

for dnsChina in $(jq -r '.dns.china' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$'); do
    echo "server $dnsChina -whitelist-ip -exclude-default-group -group chnDNS" >>/etc/smartdns/smartdns.conf
done
echo "server 127.0.0.1:5330 -exclude-default-group -group INTchnDNS" >>/etc/smartdns/smartdns.conf

if [[ -n $DoGcIP ]]; then
echo "address /$DoGcDomain/$DoGcIP" >>/etc/smartdns/smartdns.conf
echo "server 127.0.0.1:5335 -group GlobalDNS" >>/etc/smartdns/smartdns.conf
echo "server-tcp 127.0.0.1:5335 -group GlobalDNS" >>/etc/smartdns/smartdns.conf
fi

if [[ -n $doh1IP ]]; then
echo "address /$doh1Domain/$doh1IP" >>/etc/smartdns/smartdns.conf
echo "server-https https://$doh1 -no-check-certificate -group GlobalDNS" >>/etc/smartdns/smartdns.conf
elif [[ -z $doh1str0 ]]; then
>>/etc/smartdns/smartdns.conf
else
echo "address /$doh1Domain0/$doh1IP0" >>/etc/smartdns/smartdns.conf
echo "server-https https://$doh1str0 -no-check-certificate -group GlobalDNS" >>/etc/smartdns/smartdns.conf
fi

if [[ -n $doh2IP ]]; then
echo "address /$doh2Domain/$doh2IP" >>/etc/smartdns/smartdns.conf
echo "server-https https://$doh2 -no-check-certificate -group GlobalDNS" >>/etc/smartdns/smartdns.conf
elif [[ -z $doh2str0 ]]; then
>>/etc/smartdns/smartdns.conf
else
echo "address /$doh2Domain0/$doh2IP0" >>/etc/smartdns/smartdns.conf
echo "server-https https://$doh2str0 -no-check-certificate -group GlobalDNS" >>/etc/smartdns/smartdns.conf
fi



if [[ -n $DoGcIP ]] || [[ $doh1IP != $doh1IP0 ]] || [[ $doh2IP != $doh2IP0 ]] || [[ $1 = "r" ]]; then
systemctl restart smartdns >/dev/null
fi

if [[ -n $DoGcIP ]] || [[ -n $doh1IP ]] || [[ -n $doh2IP ]]; then
echo $DoGcIP $doh1IP $doh2IP | xargs -n1 | sort | uniq | sed 's/$/,/g' >/opt/de_GWD/nftables/IP_GlobalDNS
nft flush set ip de_GWD GlobalDNS
cat << EOF >/opt/de_GWD/nftables/SET_GlobalDNS.nft
#!/usr/sbin/nft -f
table ip de_GWD {
        set GlobalDNS {
                type ipv4_addr
                flags interval
                auto-merge
                elements = { $(cat /opt/de_GWD/nftables/IP_GlobalDNS) }
        }
}
EOF
chmod +x /opt/de_GWD/nftables/SET_GlobalDNS.nft
/opt/de_GWD/nftables/SET_GlobalDNS.nft &
fi

echo -e "\r\c" && echo -e "${WHITE}[ ${GREEN}âœ“ ${WHITE}]\c" && echo -e "\t${WHITE}SmartDNS action${cRES}"
