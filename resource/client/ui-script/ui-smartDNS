#!/bin/bash
RED='\E[1;31m'
GREEN='\E[1;32m'
YELLOW='\E[1;33m'
BLUE='\E[1;34m'
PURPLE='\E[1;35m'
CYAN='\E[1;36m'
WHITE='\E[1;37m'
cRES='\E[0m'



echo -e "${WHITE}[...]\c" && echo -e "\t${WHITE}SmartDNS action${cRES}\r\c"
doh1Domain0=$(awk '/-host-name /' /opt/de_GWD/smartdns/smartdns.conf | awk 'NR==1{print$4}')
doh2Domain0=$(awk '/-host-name /' /opt/de_GWD/smartdns/smartdns.conf | awk 'NR==2{print$4}')
doh1addr0=$(awk '/server-https /' /opt/de_GWD/smartdns/smartdns.conf | awk 'NR==1{print$2}')
doh2addr0=$(awk '/server-https /' /opt/de_GWD/smartdns/smartdns.conf | awk 'NR==2{print$2}')
doh1Port0=$(echo $doh1addr0 | cut -d/ -f3 | cut -d: -f2 | grep '^[[:digit:]]*$')
doh2Port0=$(echo $doh2addr0 | cut -d/ -f3 | cut -d: -f2 | grep '^[[:digit:]]*$')
doh1IP0=$(echo $doh1addr0 | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}')
doh2IP0=$(echo $doh2addr0 | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}')

if [[ -z $doh1Port0 ]]; then
    doh1Str0="$doh1IP0/dq"
    doh1Origin="$doh1Domain0/dq"
else
    doh1Str0="$doh1IP0:$doh1Port0/dq"
    doh1Origin="$doh1Domain0:$doh1Port0/dq"
fi

if [[ -z $doh2Port0 ]]; then
    doh2Str0="$doh2IP0/dq"
    doh2Origin="$doh2Domain0/dq"
else
    doh2Str0="$doh2IP0:$doh2Port0/dq"
    doh2Origin="$doh2Domain0:$doh2Port0/dq"
fi

doh1=$(jq -r '.dns.doh[0]' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')
doh2=$(jq -r '.dns.doh[1]' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')

if [[ -n $doh1 ]]; then
doh1Domain=$(echo $doh1 | cut -d/ -f1 | cut -d: -f1)
doh1IP=$(dig @127.0.0.1 $doh1Domain -4p 5331 +short  | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v "127.0.0.1" | xargs -n 1 | awk NR==1)

doh1Port=$(echo $doh1 | cut -d/ -f1 | cut -d: -f2 | grep '^[[:digit:]]*$')
if [[ -z $doh1Port ]]; then
    doh1Str="$doh1IP/dq"
else
    doh1Str="$doh1IP:$doh1Port/dq"
fi
fi

if [[ -n $doh2 ]]; then
doh2Domain=$(echo $doh2 | cut -d/ -f1 | cut -d: -f1)
doh2IP=$(dig @127.0.0.1 $doh2Domain -4p 5331 +short  | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v "127.0.0.1" | xargs -n 1 | awk NR==1)

doh2Port=$(echo $doh2 | cut -d/ -f1 | cut -d: -f2 | grep '^[[:digit:]]*$')
if [[ -z $doh2Port ]]; then
    doh2Str="$doh2IP/dq"
else
    doh2Str="$doh2IP:$doh2Port/dq"
fi
fi

touch /opt/de_GWD/coredns/corefile
if [[ $(cat /opt/de_GWD/coredns/corefile 2>/dev/null | wc -l) -gt 5 ]]; then
DoGcIP0=$(awk '/grpc . /' /opt/de_GWD/coredns/corefile | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}')
DoG=$(jq -r '.dns.dog' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')

if [[ -n $DoG ]]; then
DoGcDomain=$(echo $DoG | cut -d: -f1)
DoGcIP=$(dig @127.0.0.1 $DoGcDomain -4p 5331 +short  | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v "127.0.0.1" | xargs -n 1 | awk NR==1)
DoGcPort=$(echo $DoG | cut -d: -f2 | grep '^[[:digit:]]*$')
fi
fi

if [[ -n $DoGcIP ]] && [[ $DoGcIP != $DoGcIP0 ]]; then
sed -i '/DoGc_START/,/DoGc_END/d' /opt/de_GWD/coredns/corefile
tac /opt/de_GWD/coredns/corefile | awk 'NF>0{x=1}x' | tac | sponge /opt/de_GWD/coredns/corefile >/dev/null 2>&1
cat << EOF >>/opt/de_GWD/coredns/corefile
# DoGc_START
.:5333 {
  bind 127.0.0.1
  grpc . $DoGcIP:$DoGcPort {
    tls_servername $DoGcDomain
  }
  template ANY AAAA {
    rcode NXDOMAIN
  }
}
# DoGc_END
EOF
systemctl enable coredns >/dev/null 2>&1
systemctl restart coredns
elif [[ -z $DoGcIP ]]; then
sed -i '/DoGc_START/,/DoGc_END/d' /opt/de_GWD/coredns/corefile
  if [[ $(cat /opt/de_GWD/coredns/corefile | wc -c) -le 50 ]]; then
  systemctl disable coredns >/dev/null 2>&1
  systemctl stop coredns
  else
  systemctl restart coredns
  fi
fi



cat << EOF >/opt/de_GWD/smartdns/smartdns.conf
bind 127.0.0.1:5331 -group DNS_chn
bind-tcp 127.0.0.1:5331 -group DNS_chn

bind 127.0.0.1:5332 -no-speed-check -no-cache -group DNS_global
bind-tcp 127.0.0.1:5332 -no-speed-check -no-cache -group DNS_global

speed-check-mode tcp:443,ping
cache-size 0
cache-persist no
force-AAAA-SOA yes
dualstack-ip-selection no
prefetch-domain no
serve-expired no

log-level error
log-file /var/log/smartdns.log
log-size 32K
log-num 1

EOF

if [[ -z $(jq -r '.dns.china' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$') ]]; then
  jq --arg dnsChina "114.114.114.114 114.114.115.115 119.29.29.29 119.28.28.28 182.254.118.118 223.5.5.5 223.6.6.6 210.5.56.145 210.5.56.146" '.dns.china=$dnsChina' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
  chmod 666 /opt/de_GWD/0conf
fi

for dnsChina in $(jq -r '.dns.china' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$'); do
    echo "server $dnsChina -exclude-default-group -group DNS_chn" >>/opt/de_GWD/smartdns/smartdns.conf
done

if [[ -n $doh1IP ]]; then
echo "server-https https://$doh1Str -host-name $doh1Domain -no-check-certificate -group DNS_global" >>/opt/de_GWD/smartdns/smartdns.conf
elif [[ -z $doh1Domain0 ]]; then
>>/opt/de_GWD/smartdns/smartdns.conf
else
echo "server-https https://$doh1Str0 -host-name $doh1Domain0 -no-check-certificate -group DNS_global" >>/opt/de_GWD/smartdns/smartdns.conf
jq --arg doh1Origin "$doh1Origin" '.dns.doh[0]=$doh1Origin' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
fi

if [[ -n $doh2IP ]]; then
echo "server-https https://$doh2Str -host-name $doh2Domain -no-check-certificate -group DNS_global" >>/opt/de_GWD/smartdns/smartdns.conf
elif [[ -z $doh2Domain0 ]]; then
>>/opt/de_GWD/smartdns/smartdns.conf
else
echo "server-https https://$doh2Str0 -host-name $doh2Domain0 -no-check-certificate -group DNS_global" >>/opt/de_GWD/smartdns/smartdns.conf
jq --arg doh2Origin "$doh2Origin" '.dns.doh[1]=$doh2Origin' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
fi

if [[ -n $DoGcIP ]]; then
echo "server 127.0.0.1:5333 -group DNS_global" >>/opt/de_GWD/smartdns/smartdns.conf
echo "server-tcp 127.0.0.1:5333 -group DNS_global" >>/opt/de_GWD/smartdns/smartdns.conf
fi



jq -r '.dns.hosts | to_entries[] | [.value, .key] | @tsv' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$' | sed 's/[[:space:]][[:space:]]*/ /g' >/etc/pihole/custom.list
cat /etc/pihole/custom.list | while read line; do
  hostDomain=$(echo $line | awk '{print$2}')
  hostIP=$(echo $line | awk '{print$1}')
  sed -i "/address \/$hostDomain\//d" /opt/de_GWD/smartdns/smartdns.conf
  echo "address /$hostDomain/$hostIP" >>/opt/de_GWD/smartdns/smartdns.conf
done

uniqaddress=$(awk '/address \//' /opt/de_GWD/smartdns/smartdns.conf | sort | uniq)
sed -i '/address \//d' /opt/de_GWD/smartdns/smartdns.conf
echo $uniqaddress | xargs -n 2 >>/opt/de_GWD/smartdns/smartdns.conf



if [[ $DoGcIP != $DoGcIP0 ]] || [[ $doh1IP != $doh1IP0 ]] || [[ $doh2IP != $doh2IP0 ]] || [[ $1 = "r" ]]; then
systemctl restart smartdns
fi

if [[ -n $DoGcIP ]] || [[ -n $doh1IP ]] || [[ -n $doh2IP ]]; then
echo $DoGcIP $doh1IP $doh2IP | xargs -n1 | sort | uniq | sed 's/$/,/g' >/opt/de_GWD/nftables/IP_GlobalDNS
nft flush set ip de_GWD GlobalDNS
cat << EOF >/opt/de_GWD/nftables/SET_GlobalDNS.nft
#!/usr/sbin/nft -f
table ip de_GWD {
        set GlobalDNS {
                type ipv4_addr
                flags interval
                auto-merge
                elements = { $(cat /opt/de_GWD/nftables/IP_GlobalDNS) }
        }
}
EOF
chmod +x /opt/de_GWD/nftables/SET_GlobalDNS.nft
/opt/de_GWD/nftables/SET_GlobalDNS.nft &
fi

chmod 666 /opt/de_GWD/0conf
echo -e "${WHITE}[ ${GREEN}âœ“ ${WHITE}]\c" && echo -e "\t${WHITE}SmartDNS action${cRES}"
