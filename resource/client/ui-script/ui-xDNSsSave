#!/bin/bash
rm -rf /opt/de_GWD/xDNSs
mkdir -p /opt/de_GWD/xDNSs
cp -f /opt/de_GWD/vtrui/vtrui /opt/de_GWD/xDNSs/xDNSs
chmod +x /opt/de_GWD/xDNSs/xDNSs

xDNSsPort=$(jq -r '.FORWARD.xDNSs.port' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')

cat << EOF >/opt/de_GWD/xDNSs/config.json
{
  "dns":{
    "servers":["localhost"]
  },
  "routing":{
    "rules":[
      {"type":"field","inboundTag":["xDNSsin"],"outboundTag":"xDNSsout"}
    ]
  },
  "inbounds": [
    {
      "tag":"xDNSsin",
      "port": $xDNSsPort,
      "protocol": "vless",
      "settings":{
        "decryption": "none",
        "clients":[
          {
            "id":"ccabd6d0-beb2-4b8a-8f94-45f3dc235ebe",
            "flow":"xtls-rprx-direct",
            "level":0
          }
        ]
      },
      "streamSettings": {
        "network": "tcp",
        "security": "xtls",
        "xtlsSettings": {
          "rejectUnknownSni": true,
          "alpn":["h2","http/1.1"],
          "certificates": [
            {
              "certificateFile": "/var/www/ssl/de_GWD.cer",
              "keyFile": "/var/www/ssl/de_GWD.key"
            }
          ]
        }
      }
    }
  ],
  "outbounds": [
    {
      "tag":"xDNSsout",
      "protocol": "dns",
      "settings":{"network":"udp","address":"127.0.0.1"},
      "streamSettings":{"sockopt":{"tcpFastOpen":true,"mark":255}}
    }
  ]
}
EOF

chmod 666 /opt/de_GWD/xDNSs/config.json
chmod 644 /var/www/ssl/*.key

rm -rf /lib/systemd/system/xDNSs.service
cat << "EOF" >/etc/systemd/system/xDNSs.service
[Unit]
Description=xDNS Server
After=network.target nss-lookup.target

[Service]
User=root
Type=simple
ExecStart=/opt/de_GWD/xDNSs/xDNSs -c /opt/de_GWD/xDNSs/config.json
AmbientCapabilities=CAP_NET_RAW CAP_NET_ADMIN CAP_NET_BIND_SERVICE
LimitNOFILE=1000000
LimitNPROC=infinity
LimitCORE=infinity
NoNewPrivileges=true
Nice=-9
CPUSchedulingPolicy=fifo
CPUSchedulingPriority=10
IOSchedulingClass=best-effort
IOSchedulingPriority=0
Restart=always
RestartSec=1

[Install]
WantedBy=multi-user.target
EOF
ln -sf /etc/systemd/system/xDNSs.service /lib/systemd/system/xDNSs.service >/dev/null 2>&1
systemctl daemon-reload >/dev/null
systemctl restart xDNSs
if [[ $? -ne 0 ]]; then
sed -i '/Nice=/d' /etc/systemd/system/xDNSs.service
sed -i '/CPUSchedulingPolicy=/d' /etc/systemd/system/xDNSs.service
sed -i '/CPUSchedulingPriority=/d' /etc/systemd/system/xDNSs.service
sed -i '/IOSchedulingClass=/d' /etc/systemd/system/xDNSs.service
sed -i '/IOSchedulingPriority=/d' /etc/systemd/system/xDNSs.service
ln -sf /etc/systemd/system/xDNSs.service /lib/systemd/system/xDNSs.service >/dev/null 2>&1
systemctl daemon-reload >/dev/null
systemctl restart xDNSs
fi
systemctl enable xDNSs >/dev/null 2>&1
