#!/bin/bash
RED='\E[1;31m'
GREEN='\E[1;32m'
YELLOW='\E[1;33m'
BLUE='\E[1;34m'
PURPLE='\E[1;35m'
CYAN='\E[1;36m'
WHITE='\E[1;37m'
cRES='\E[0m'


echo -e "\r\c" && echo -e "${WHITE}[${cRES}...${WHITE}]\c" && echo -e "\t${WHITE}Collect nftables IP set${cRES}\c"

>/opt/de_GWD/nftables/IP_V2NODE
jq -r '.v2node[].domain' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$' | cut -d: -f1 | sort | uniq | sed '/^\s*$/d' | xargs -n 8 | while read line
do
  for V2nodeDomain in $line
  do
  dig @127.0.0.1 $V2nodeDomain -4p 5334 +short  | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | grep -v "127.0.0.1" | sed '/^\s*$/d' | xargs -n 1 >>/opt/de_GWD/nftables/IP_V2NODE &
  done
  wait
done

sed -i '/^\s*$/d' /opt/de_GWD/nftables/IP_V2NODE
sed -i 's/$/,/g' /opt/de_GWD/nftables/IP_V2NODE
[[ $(du -sk /opt/de_GWD/nftables/IP_V2NODE 2>/dev/null | awk '{print$1}') -gt 2 ]] && IP_V2NODE_elements="elements = { $(cat /opt/de_GWD/nftables/IP_V2NODE) }"
nft flush set ip de_GWD V2NODE
cat << EOF >/opt/de_GWD/nftables/SET_V2NODE.nft
#!/usr/sbin/nft -f
table ip de_GWD {
        set V2NODE {
                type ipv4_addr
                flags interval
                auto-merge
                $IP_V2NODE_elements
        }
}
EOF
chmod +x /opt/de_GWD/nftables/SET_V2NODE.nft
/opt/de_GWD/nftables/SET_V2NODE.nft &





if [[ -n $(cat /tmp/listBpre) ]]; then
	cat /tmp/listBpre | xargs -n 8 | while read listB; do
		for listBdomain in $listB; do
			dig @127.0.0.1 $listBdomain -4p 5334 +short | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | xargs -n1 >>/opt/de_GWD/nftables/IP_listB &
		done
		wait
	done

sed -i '/^\s*$/d' /opt/de_GWD/nftables/IP_listB
sed -i 's/$/,/g' /opt/de_GWD/nftables/IP_listB
[[ $(du -sk /opt/de_GWD/nftables/IP_listB 2>/dev/null | awk '{print$1}') -gt 2 ]] && IP_listB_elements="elements = { $(cat /opt/de_GWD/nftables/IP_listB) }"
nft flush set ip de_GWD listB
cat << EOF >/opt/de_GWD/nftables/SET_listB.nft
#!/usr/sbin/nft -f
table ip de_GWD {
        set listB {
                type ipv4_addr
                flags interval
                auto-merge
                $IP_listB_elements
        }
}
EOF
chmod +x /opt/de_GWD/nftables/SET_listB.nft
/opt/de_GWD/nftables/SET_listB.nft &
fi

if [[ -n $(cat /tmp/listWpre) ]]; then
	cat /tmp/listWpre | xargs -n 8 | while read listW; do
		for listWdomain in $listW; do
			dig @127.0.0.1 $listWdomain -4p 5332 +short | grep -Po '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | xargs -n1 >>/opt/de_GWD/nftables/IP_listW &
		done
		wait
	done

sed -i '/^\s*$/d' /opt/de_GWD/nftables/IP_listW
sed -i 's/$/,/g' /opt/de_GWD/nftables/IP_listW
[[ $(du -sk /opt/de_GWD/nftables/IP_listW 2>/dev/null | awk '{print$1}') -gt 2 ]] && IP_listW_elements="elements = { $(cat /opt/de_GWD/nftables/IP_listW) }"
nft flush set ip de_GWD listW
cat << EOF >/opt/de_GWD/nftables/SET_listW.nft
#!/usr/sbin/nft -f
table ip de_GWD {
        set listW {
                type ipv4_addr
                flags interval
                auto-merge
                $IP_listW_elements
        }
}
EOF
chmod +x /opt/de_GWD/nftables/SET_listW.nft
/opt/de_GWD/nftables/SET_listW.nft &
fi

rm -rf /tmp/listBpre
rm -rf /tmp/listWpre

echo -e "\r\c" && echo -e "${WHITE}[ ${GREEN}âœ“ ${WHITE}]\c" && echo -e "\t${WHITE}Collect nftables IP set${cRES}"
