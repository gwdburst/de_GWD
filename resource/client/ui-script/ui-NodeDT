#!/bin/bash
jq 'del(.outbounds[] | select(.tag == "divert"))' /opt/de_GWD/vtrui/config.json |\
jq 'del(.routing.rules[] | select(.outboundTag == "divert"))' | sponge /opt/de_GWD/vtrui/config.json

tag="divert"

if [[ -n $2 ]]; then
address=$(jq -r --argjson nodecheck $2 '.v2node | to_entries[] | select(.key == $nodecheck) | .value.domain' /opt/de_GWD/0conf)
tls=$(jq -r --argjson nodecheck $2 '.v2node | to_entries[] | select(.key == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
uuid=$(jq -r --argjson nodecheck $2 '.v2node | to_entries[] | select(.key == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
path=$(jq -r --argjson nodecheck $2 '.v2node | to_entries[] | select(.key == $nodecheck) | .value.path' /opt/de_GWD/0conf)
/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path

jq --arg address $address '.v2nodeDIV.nodeDT.address=$address' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
chmod 666 /opt/de_GWD/0conf
else
address=$(jq -r '.v2nodeDIV.nodeDT.address' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$')
	if [[ -n $address ]]; then
		tls=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.tls' /opt/de_GWD/0conf)
		uuid=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.uuid' /opt/de_GWD/0conf)
		path=$(jq -r --arg nodecheck $address '.v2node | to_entries[] | select(.value.domain == $nodecheck) | .value.path' /opt/de_GWD/0conf)
		/opt/de_GWD/ui-V2outbound $tag $address $tls $uuid $path
	fi
fi

jq -r '.v2nodeDIV.nodeDT.ip[]' /opt/de_GWD/0conf 2>/dev/null | grep -v '^null$' >/tmp/routingSip
routingSip=$(echo $(jq -R -s -c 'split("\n")' < /tmp/routingSip) | jq -c '.[:-1]')

[[ -n $(cat /tmp/routingSip) ]] && /opt/de_GWD/ui-V2routingSip $tag $routingSip

jq '.v2nodeDIV.nodeDT.status="on"' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf
chmod 666 /opt/de_GWD/0conf

rm -rf /tmp/routingSip

[[ $1 = "r" ]] && systemctl restart vtrui >/dev/null
